)
}
ggplot(dReg.cor, aes(regionID, corr)) +
geom_point(size = 0.5)
dReg.cor
cor(dAF_conMT[, reg == 1])
cor(dAF_conMT[, reg == 1]) %>% mean(na.rm = TRUE)
cor(dAF_conMT[, reg == 1]) %>% median(na.rm = TRUE)
cor(dAF_conMT[, reg == 1]) %>% summary(na.rm = TRUE)
cor(dAF_conMT[, reg == 1]) %>%
as.numeric() %>%
summary(na.rm = TRUE)
cor(dAF_conMT[, reg == 1]) %>%
as.numeric() %>%
density() %>%
plot()
cor(dAF_conMT[, reg == 1]) %>%
as.numeric() %>%
density(na.rm = TRUE) %>%
plot()
reg <- as.integer((1:nSNP) / 100)   # devide SNP to regions
dReg.cor <- data.table()
for (i in unique(reg)) {
print(i)
res.cor <- cor(dAF_conMT[, reg == i])
dReg.cor <- rbind(dReg.cor,
data.frame(regionID = i,
mean.corr = mean(res.cor, na.rm = TRUE),
median.corr = median(res.cor, na.rm = TRUE))
)
}
dReg.cor %>%
melt(id.vars = "regionID")
dReg.cor %>%
melt(id.vars = "regionID") %>%
ggplot(dReg.cor, aes(regionID, value, col = variable)) +
geom_point(size = 0.5) +
facet_wrap(variable ~ .)
dReg.cor %>%
melt(id.vars = "regionID") %>%
ggplot(aes(regionID, value, col = variable)) +
geom_point(size = 0.5) +
facet_wrap(variable ~ .)
dReg.cor %>%
melt(id.vars = "regionID") %>%
ggplot(aes(regionID, value, col = variable)) +
geom_point(size = 0.5)
a <- rnorm(100)
mean(a)
rep(1, 10)
c(a, rep(1, 10))
mean(c(a, rep(1, 10)))
mean(a)
i
res.cor <- cor(dAF_conMT[, reg == i])
res.cor
res.cor[lower.tri(res.cor, diag = TRUE)] <- 0
res.cor
reg <- as.integer((1:nSNP) / 100)   # devide SNP to regions
dReg.cor <- data.table()
for (i in unique(reg)) {
print(i)
res.cor <- cor(dAF_conMT[, reg == i])
res.cor[lower.tri(res.cor, diag = TRUE)] <- 0
dReg.cor <- rbind(dReg.cor,
data.frame(regionID = i,
mean.corr = mean(res.cor, na.rm = TRUE),
median.corr = median(res.cor, na.rm = TRUE))
)
}
dReg.cor
res.cor <- cor(dAF_conMT[, reg == 1])
res.cor[lower.tri(res.cor, diag = TRUE)] <- 0
res.cor %>%
as.numeric() %>%
density(na.rm = TRUE) %>%
plot()
a <-
res.cor <- cor(dAF_conMT[, reg == 1])
res.cor[lower.tri(res.cor, diag = TRUE)] <- NA
res.cor %>%
as.numeric() %>%
density(na.rm = TRUE) %>%
plot()
reg <- as.integer((1:nSNP) / 100)   # devide SNP to regions
dReg.cor <- data.table()
for (i in unique(reg)) {
print(i)
res.cor <- cor(dAF_conMT[, reg == i])
res.cor[lower.tri(res.cor, diag = TRUE)] <- NA
dReg.cor <- rbind(dReg.cor,
data.frame(regionID = i,
mean.corr = mean(res.cor, na.rm = TRUE),
median.corr = median(res.cor, na.rm = TRUE))
)
}
dReg.cor %>%
melt(id.vars = "regionID") %>%
ggplot(aes(regionID, value, col = variable)) +
geom_point(size = 0.5)
nSNP <- dim(dAF_conMT)[[2]]   # number of SNP
nSNP
dim(dAF_conMT)[1]
a <-
dim(dAF_conMT)[1] == nrow(dAF_conMT)
dim(dAF_conMT)[1] == nrow(dAF_conMT)
dim(dAF_conMT)[2] == length(colnames(dAF_conMT))
colnames(dAF_conMT)
names(dAF_conMT)
dAF_conMT[1, ]
length(dAF_conMT[1, ])
dim(dAF_conMT)[1] == nrow(dAF_conMT)
dim(dAF_conMT)[2] == length(dAF_conMT[1, ])
?cor
res.cor <- cor(dAF_conMT[, reg == i])
res.cor
#res.cor[lower.tri(res.cor, diag = TRUE)] <- NA   # optional. experiment
diag(res.cor) <- NA
res.cor
nSNP <- dim(dAF_conMT)[[2]]   # number of SNP
dim(dAF_conMT)[1]
reg <- as.integer((1:nSNP) / 100)   # devide SNP to regions
dReg.cor <- data.frame()   # iniciate result data.frame
for (i in unique(reg)) {
print(i)
res.cor <- cor(dAF_conMT[, reg == i])
#res.cor[lower.tri(res.cor, diag = TRUE)] <- NA   # optional. experiment
diag(res.cor) <- NA
dReg.cor <- rbind(dReg.cor,
data.frame(regionID = i,
mean.corr = mean(res.cor, na.rm = TRUE),
median.corr = median(res.cor, na.rm = TRUE))
)
}
dReg.cor
dReg.cor %>%
melt(id.vars = "regionID") %>%
ggplot(aes(regionID, value, col = variable)) +
geom_point(size = 0.5)
binary_snp <- t(dAF_conMT)
binary_snp
n_snps = dim(binary_snps)[1]
binary_snps <- t(dAF_conMT)
n_snps
n_snps = dim(binary_snps)[1]
n_snps
n_folds = 10
n_folds
e_results = rep(NA, n_folds)
e_results
n_snps
n_folds
fold <- 1
start = floor((fold-1)*(n_snps/n_folds)+1)
end = floor((fold)*(n_snps/n_folds))
start
end
fold <- 2
start = floor((fold-1)*(n_snps/n_folds)+1)
end = floor((fold)*(n_snps/n_folds))
start
end
correlation = cor(binary_snps[start:end,])
correlation
diag(correlation) = NA
#print(correlation)
e_results[fold] = mean(correlation, na.rm = T)
e_results
n_folds = 100000
fold <- 2
start = floor((fold-1)*(n_snps/n_folds)+1)
end = floor((fold)*(n_snps/n_folds))
start
end
n_folds = 10000
fold <- 2
start
end
fold
n_folds = 1000
fold <- 2
start = floor((fold-1)*(n_snps/n_folds)+1)
end = floor((fold)*(n_snps/n_folds))
start
end
correlation = cor(binary_snps[start:end,])
diag(correlation) = NA
#print(correlation)
e_results[fold] = mean(correlation, na.rm = T)
e_results
?floor
n_snps/n_folds
fold-1
(fold-1)*(n_snps/n_folds)
(fold-1)*(n_snps/n_folds)+1
start
dReg.cor %>%
melt(id.vars = "regionID") %>%
ggplot(aes(regionID, value, col = variable)) +
geom_point(size = 0.5)
nSNP <- dim(dAF_conMT)[[2]]   # number of SNP
dim(dAF_conMT)[1]
reg <- as.integer((1:nSNP) / 100)   # devide SNP to regions
dReg.cor <- data.frame()   # iniciate result data.frame
for (i in unique(reg)) {
print(i)
res.cor <- cor(dAF_conMT[, reg == i])
#res.cor[lower.tri(res.cor, diag = TRUE)] <- NA   # optional. experiment
diag(res.cor) <- NA
dReg.cor <- rbind(dReg.cor,
data.frame(regionID = i,
mean.corr = mean(res.cor, na.rm = TRUE),
median.corr = median(res.cor, na.rm = TRUE))
)
}
BW <- 10000
reg <- as.integer((dSnp$pos / BW))
reg
table(reg)
dReg.cor <- data.frame()   # iniciate result data.frame
for (i in unique(reg)) {
print(i)
res.cor <- cor(dAF_conMT[, reg == i])
#res.cor[lower.tri(res.cor, diag = TRUE)] <- NA   # optional. experiment
diag(res.cor) <- NA
dReg.cor <- rbind(dReg.cor,
data.frame(regionID = i,
mean.corr = mean(res.cor, na.rm = TRUE),
median.corr = median(res.cor, na.rm = TRUE))
)
}
unique(reg)
i <- unique(reg)[1]
i
reg
reg == i
table(reg) == 1
table(table(reg) == 1)
diag(res.cor) <- NA
res.cor <- cor(dAF_conMT[, reg == 1])
diag(res.cor) <- NA
res.cor %>%
as.numeric() %>%
density(na.rm = TRUE) %>%
plot()
res.cor
res.cor <- cor(dAF_conMT[, reg == 1])
res.cor
reg
reg <- as.integer((1:nSNP) / 100)   # devide SNP to regions
res.cor <- cor(dAF_conMT[, reg == 1])
#res.cor[lower.tri(res.cor, diag = TRUE)] <- NA
diag(res.cor) <- NA
res.cor %>%
as.numeric() %>%
density(na.rm = TRUE) %>%
plot()
BW <- 100000
reg <- as.integer((dSnp$pos / BW))
table(table(reg) == 1)
which(table(reg) == 1)
XSNP <- 100
calcXSNP_cor <- function(dAF_conMT, XSNP, ...) {
nSNP <- dim(dAF_conMT)[[2]]   # number of SNP
reg <- as.integer((1:nSNP) / XSNP)   # devide SNP to regions
dReg.cor <- data.frame()   # iniciate result data.frame
for (i in unique(reg)) {
print(i)
res.cor <- cor(dAF_conMT[, reg == i])
#res.cor[lower.tri(res.cor, diag = TRUE)] <- NA   # optional. experiment
diag(res.cor) <- NA
dReg.cor <- rbind(dReg.cor,
data.frame(regionID = i,
mean.corr = mean(res.cor, na.rm = TRUE),
median.corr = median(res.cor, na.rm = TRUE))
)
}
}
dRes_AF <- calcXSNP_cor(dAF_conMT, 100)
dRes_AF
calcXSNP_cor <- function(dAF_conMT, XSNP, ...) {
nSNP <- dim(dAF_conMT)[[2]]   # number of SNP
reg <- as.integer((1:nSNP) / XSNP)   # devide SNP to regions
dReg.cor <- data.frame()   # iniciate result data.frame
for (i in unique(reg)) {
print(i)
res.cor <- cor(dAF_conMT[, reg == i])
#res.cor[lower.tri(res.cor, diag = TRUE)] <- NA   # optional. experiment
diag(res.cor) <- NA
dReg.cor <- rbind(dReg.cor,
data.frame(regionID = i,
mean.corr = mean(res.cor, na.rm = TRUE),
median.corr = median(res.cor, na.rm = TRUE))
)
}
return(dReg.cor)
}
dRes_AF <- calcXSNP_cor(dAF_conMT, 100)
dRes_AF
dRes_AF %>%
melt(id.vars = "regionID") %>%
ggplot(aes(regionID, value, col = variable)) +
geom_point(size = 0.5)
BW <- 100000
reg <- as.integer((dSnp$pos / BW))
table(table(reg) == 1)
which(table(reg) == 1)
table(reg)
BW <- 10000
reg <- as.integer((dSnp$pos / BW))
table(table(reg) == 1)
which(table(reg) == 1)
reg
reg <- as.integer((dSnp$pos / BW))
table(reg)
which(table(reg) == 1)
dReg.cor <- data.frame()   # iniciate result data.frame
table(reg) == 1
which(table(reg) == 1)
remove_SNP1 <- names(which(table(reg) == 1))
remove_SNP1
!unique(reg) %in% remove_SNP1
remove_SNP1 <- names(which(table(reg) != 1))
remove_SNP1
head(remove_SNP1)
reg
remove_SNP1 <- as.numeric(names(which(table(reg) != 1)))
remove_SNP1
snp_regions <- as.numeric(names(which(table(reg) != 1)))
snp_region_ID <- as.numeric(names(which(table(reg) != 1)))
snp_region_ID
BW <- 10000
reg <- as.integer((dSnp$pos / BW))
snp_region_ID <- as.numeric(names(which(table(reg) != 1)))
dReg.cor <- data.frame()   # iniciate result data.frame
i <- snp_region_ID
print(i)
i <- snp_region_ID[1]
print(i)
res.cor <- cor(dAF_conMT[, reg == i])
res.cor
#res.cor[lower.tri(res.cor, diag = TRUE)] <- NA   # optional. experiment
diag(res.cor) <- NA
res.cor
dReg.cor <- rbind(dReg.cor,
data.frame(regionID = i,
mean.corr = mean(res.cor, na.rm = TRUE),
median.corr = median(res.cor, na.rm = TRUE))
)
dReg.cor
for (i in snp_region_ID) {
print(i)
res.cor <- cor(dAF_conMT[, reg == i])
#res.cor[lower.tri(res.cor, diag = TRUE)] <- NA   # optional. experiment
diag(res.cor) <- NA
dReg.cor <- rbind(dReg.cor,
data.frame(regionID = i,
mean.corr = mean(res.cor, na.rm = TRUE),
median.corr = median(res.cor, na.rm = TRUE))
)
}
calcSnpBin_cor <- function(dAF_conMT, BW = 10000, ...) {
reg <- as.integer((dSnp$pos / BW))
snp_region_ID <- as.numeric(names(which(table(reg) != 1)))
dReg.cor <- data.frame()   # iniciate result data.frame
i <- snp_region_ID[1]
for (i in snp_region_ID) {
print(i)
res.cor <- cor(dAF_conMT[, reg == i])
#res.cor[lower.tri(res.cor, diag = TRUE)] <- NA   # optional. experiment
diag(res.cor) <- NA
dReg.cor <- rbind(dReg.cor,
data.frame(regionID = i,
mean.corr = mean(res.cor, na.rm = TRUE),
median.corr = median(res.cor, na.rm = TRUE))
)
}
return(dReg.cor)
}
dResBin_AF <- calcSnpBin_cor(dAF_conMT)
dResBin_AF %>%
melt(id.vars = "regionID") %>%
ggplot(aes(regionID, value, col = variable)) +
geom_point(size = 0.5)
dResBin_AF100kb <- calcSnpBin_cor(dAF_conMT, BW = 100000)
dResBin_AF100kb %>%
melt(id.vars = "regionID") %>%
ggplot(aes(regionID, value, col = variable)) +
geom_point(size = 0.5)
res <- dSnp %>%
.[, .(B = as.integer(pos / 100000))] %>%
.[, .(count = .N), by = B]
ggplot(res, aes(B, count)) +
geom_point(size = 0.5)
## SNP count in X Kb window
BW <- 100000
res <- dSnp %>%
.[, .(B = as.integer(pos / BW))] %>%
.[, .(count = .N), by = B]
ggplot(res, aes(B, count)) +
geom_point(size = 0.5)
## SNP density by position
temp <- density(dSnp$pos, bw = 10)
plot(temp,
#type = "n",
xlab = "Position in the alignment",
main = "Location of the SNPs")
polygon(c(temp$x, rev(temp$x)),
c(temp$y, rep(0, length(temp$x))),
col = transp("blue", .3))
points(position(dGenlight), rep(0, nLoc(dGenlight)), pch = "|", col = "blue")
plot(density(dSnp$pos), bw = 10)
temp <- density(dSnp$pos, bw = 10)
plot(temp,
#type = "n",
xlab = "Position in the alignment",
main = "Location of the SNPs")
polygon(c(temp$x, rev(temp$x)),
c(temp$y, rep(0, length(temp$x))),
col = transp("blue", .3))
points(dSnp$pos, rep(0, nrow(dSnp)), pch = "|", col = "blue")
plot(density(dSnp$pos), bw = 10)
polygon(c(temp$x, rev(temp$x)),
c(temp$y, rep(0, length(temp$x))))
## SNP density by position
temp <- density(dSnp$pos, bw = 10)
plot(temp,
#type = "n",
xlab = "Position in the alignment",
main = "Location of the SNPs")
polygon(c(temp$x, rev(temp$x)),
c(temp$y, rep(0, length(temp$x))))
library(epicontacts)
polygon(c(temp$x, rev(temp$x)),
c(temp$y, rep(0, length(temp$x))),
col = "blue")
dAF_conMT
dAF_conMT[, 1:10]
apply(dAF_conMT[, 1:10], 2, function(x) {
n_0 <- sum(x == 0, na.rm = TRUE)
n_1 <- sum(x == 1, na.rm = TRUE)
})
c(n_0, n_1)
apply(dAF_conMT[, 1:10], 2, function(x) {
n_0 <- sum(x == 0, na.rm = TRUE)
n_1 <- sum(x == 1, na.rm = TRUE)
c(n_0, n_1)
})
data.table(a = n_0, b = n_1)
apply(dAF_conMT[, 1:10], 2, function(x) {
n_0 <- sum(x == 0, na.rm = TRUE)
n_1 <- sum(x == 1, na.rm = TRUE)
data.table(a = n_0, b = n_1)
})
res = apply(dAF_conMT[, 1:10], 2, function(x) {
n_0 <- sum(x == 0, na.rm = TRUE)
n_1 <- sum(x == 1, na.rm = TRUE)
data.table(a = n_0, b = n_1)
})
unlist(res)
res = apply(dAF_conMT[, 1:10], 2, function(x) {
n_0 <- sum(x == 0, na.rm = TRUE)
n_1 <- sum(x == 1, na.rm = TRUE)
c(a = n_0, b = n_1)
})
res
res <- apply(dAF_conMT[, 1:10], 2, function(x) {
c(n_0 = sum(x == 0, na.rm = TRUE),
n_1 = sum(x == 1, na.rm = TRUE))
})
res
dAF_conMT[, 1:10]
a <- as.data.table(dAF_conMT[, 1:10])
a
a[, .N]
table(a)
summary(a)
summary(dAF_conMT[, 1:10])
res <- apply(dAF_conMT, 2, function(x) {
c(n_0 = sum(x == 0, na.rm = TRUE),
n_1 = sum(x == 1, na.rm = TRUE))
})
res
res <- as.data.table(t(res))
res
res %>%
melt()
res %>%
melt() %>%
ggplot(aes(value, col = variable)) +
geom_histogram() +
facet_wrap(variable ~ .)
res %>%
melt() %>%
ggplot(aes(value)) +
geom_histogram() +
facet_wrap(variable ~ .)
res %>%
melt() %>%
ggplot(aes(value, col = variable)) +
geom_histogram()
res %>%
melt() %>%
ggplot(aes(value, col = variable)) +
geom_histogram() +
facet_grid(variable ~ .)
dim(dAF_conMT)[1]
res %>%
melt() %>%
ggplot(aes(value, col = variable)) +
geom_histogram(bins = dim(dAF_conMT)[1]) +
facet_grid(variable ~ .)
